---
title: "Weekly Charts"
subtitle: "Data visualizations that tell Brazil's economic story"
lang: en
format:
  html:
    page-layout: full
    css: weekly-charts-style.css
listing:
  contents: charts
  sort: "date desc"
  type: default
  categories: false
  sort-ui: false
  filter-ui: false
  page-size: 10
  fields: [image, date, title, description]
  feed: false
---

<div class="charts-hero">
  <div class="hero-content">
    <h1 class="hero-title">Weekly Charts</h1>
    <p class="hero-subtitle">Brief, visual stories from Brazil's data landscape</p>
  </div>
</div>

<div class="charts-intro">
  <div class="intro-content">
    <p>Every week, we create compelling visualizations that reveal insights about Brazil's economy, society, and urban development. Each chart tells a focused story with minimal text and maximum visual impact.</p>
  </div>
</div>

<div class="charts-container">
  <div id="charts-grid" class="charts-grid">
    <!-- Charts will be loaded here via infinite scroll -->
  </div>
  
  <div id="loading-indicator" class="loading-indicator">
    <div class="spinner"></div>
    <p>Loading more charts...</p>
  </div>
</div>

<script>
// Infinite scroll implementation
let currentPage = 1;
let isLoading = false;
let hasMoreContent = true;

// Sample chart data (in production, this would come from your CMS/database)
const chartData = [
  {
    id: 1,
    title: "Brazil's Housing Price Surge",
    description: "Real estate prices increased 127% in major cities since 2019",
    image: "../assets/images/weekly-charts/housing-prices-2025.png",
    date: "2025-01-10",
    category: "Housing"
  },
  {
    id: 2,
    title: "Municipal Debt by Region",
    description: "Southeast cities carry 60% of Brazil's municipal debt",
    image: "../assets/images/weekly-charts/municipal-debt.png",
    date: "2025-01-03",
    category: "Public Finance"
  },
  {
    id: 3,
    title: "São Paulo Metro vs Car Ownership",
    description: "Metro expansion correlates with reduced car purchases in covered areas",
    image: "../assets/images/weekly-charts/sp-metro-cars.png",
    date: "2024-12-27",
    category: "Transportation"
  },
  {
    id: 4,
    title: "Regional Inflation Divergence",
    description: "North region inflation runs 2.3 percentage points above national average",
    image: "../assets/images/weekly-charts/regional-inflation.png",
    date: "2024-12-20",
    category: "Economics"
  },
  {
    id: 5,
    title: "University Graduates by Metropolitan Area",
    description: "São Paulo and Rio concentrate 45% of Brazil's new graduates",
    image: "../assets/images/weekly-charts/graduates-metros.png",
    date: "2024-12-13",
    category: "Education"
  },
  // Add more sample data...
];

function createChartCard(chart) {
  return `
    <div class="chart-card" data-chart-id="${chart.id}">
      <div class="chart-image">
        <img src="${chart.image}" alt="${chart.title}" loading="lazy" />
        <div class="chart-overlay">
          <span class="chart-category">${chart.category}</span>
        </div>
      </div>
      <div class="chart-content">
        <h3 class="chart-title">${chart.title}</h3>
        <p class="chart-description">${chart.description}</p>
        <div class="chart-meta">
          <span class="chart-date">${formatDate(chart.date)}</span>
          <div class="chart-actions">
            <button class="share-btn" onclick="shareChart(${chart.id})">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                <path d="M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92-1.31-2.92-2.92-2.92z"/>
              </svg>
            </button>
            <button class="expand-btn" onclick="expandChart(${chart.id})">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                <path d="M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z"/>
              </svg>
            </button>
          </div>
        </div>
      </div>
    </div>
  `;
}

function formatDate(dateString) {
  const date = new Date(dateString);
  return date.toLocaleDateString('en-US', { 
    month: 'short', 
    day: 'numeric',
    year: 'numeric'
  });
}

function loadCharts(page = 1) {
  if (isLoading || !hasMoreContent) return;
  
  isLoading = true;
  document.getElementById('loading-indicator').style.display = 'block';
  
  // Simulate API delay
  setTimeout(() => {
    const startIndex = (page - 1) * 5;
    const endIndex = startIndex + 5;
    const pageCharts = chartData.slice(startIndex, endIndex);
    
    if (pageCharts.length === 0) {
      hasMoreContent = false;
      document.getElementById('loading-indicator').innerHTML = '<p>No more charts to load</p>';
      return;
    }
    
    const chartsGrid = document.getElementById('charts-grid');
    pageCharts.forEach(chart => {
      chartsGrid.innerHTML += createChartCard(chart);
    });
    
    isLoading = false;
    document.getElementById('loading-indicator').style.display = 'none';
    
    if (endIndex >= chartData.length) {
      hasMoreContent = false;
    }
  }, 1000);
}

function shareChart(chartId) {
  const chart = chartData.find(c => c.id === chartId);
  if (navigator.share) {
    navigator.share({
      title: chart.title,
      text: chart.description,
      url: window.location.href + '#chart-' + chartId
    });
  } else {
    // Fallback for browsers without Web Share API
    navigator.clipboard.writeText(window.location.href + '#chart-' + chartId);
    alert('Link copied to clipboard!');
  }
}

function expandChart(chartId) {
  // Implement chart expansion/lightbox functionality
  console.log('Expanding chart:', chartId);
}

// Infinite scroll listener
window.addEventListener('scroll', () => {
  if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight - 1000) {
    loadCharts(currentPage + 1);
    currentPage++;
  }
});

// Load initial charts
document.addEventListener('DOMContentLoaded', () => {
  loadCharts(1);
});
</script>